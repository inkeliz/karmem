{{- define "header"}}karmem {{.Name}} {{- range $tag := .Tags }} @{{$tag.Name}}({{- if $tag.Value}}`{{$tag.Value}}`{{- end}}){{- end }};
{{end}}
{{- define "enums"}}
{{- /*gotype: karmem.org/cmd/karmem/kmparser.File*/ -}}
{{- range $root := .Enums}}
enum {{$root.Data.Name}} {{$root.Data.Type.Schema}}{{range $tag := $root.Data.Tags }} @{{$tag.Name}}(`{{$tag.Value}}`){{ end }} {
{{- if $root.Data.IsSequential}}
    {{- range $field := $root.Data.Fields}}
    {{ToNamePadding $field $root}} {{- range $tag := $field.Data.Tags }} @{{$tag.Name}}({{- if $tag.Value}}`{{$tag.Value}}`{{- end}}){{ end }};
    {{- end}}
{{- else}}
    {{- range $field := $root.Data.Fields}}
    {{ToNamePadding $field $root}} = {{$field.Data.Value}} {{- range $tag := $field.Data.Tags }} @{{$tag.Name}}({{- if $tag.Value}}`{{$tag.Value}}`{{- end}}){{ end }};
    {{- end}}
{{- end}}
}
{{ end }}
{{ end }}
{{- define "struct"}}
{{- range $root := .Structs}}
struct {{$root.Data.Name}} {{FromStructClass $root.Data.Class}}{{range $tag := $root.Data.Tags }} @{{$tag.Name}}({{- if $tag.Value}}`{{$tag.Value}}`{{- end}}){{ end }} {
    {{- range $field := $root.Data.Fields}}
    {{ToNamePadding $field $root}} {{$field.Data.Type.Schema}} {{- range $tag := $field.Data.Tags }} @{{$tag.Name}}({{- if $tag.Value}}`{{$tag.Value}}`{{- end}}){{ end }};
    {{- end}}
}
{{ end }}
{{- end }}